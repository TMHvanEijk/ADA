openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Auction Bid Service
  license:
    name: MIT
servers:
  - url: 'http://localhost:5000/v1.0'
paths:
  '/auctions/{a_id}':
    get:
      summary: Get a Auction Record
      operationId: resources.listing.Listing.get
      tags:
        - auction record
      parameters:
        - name: a_id
          in: path
          description: Auction identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Auction Record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionOut'
        '404':
          description: Auction record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a Auction Record
      tags:
        - place records
      operationId: resources.listing.Listing.delete
      parameters:
        - name: a_id
          in: path
          description: Auction Record identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Record was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyMsg'
        '404':
          description: Auction record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auctions/:
    post:
      summary: Create a Auction
      operationId: resources.listing.Listing.create
      tags:
        - Auction records
      requestBody:
        description: Auction Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionIn'
      responses:
        '200':
          description: Created Auction Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  auction_id:
                    type: string
                    description: The auction ID
        '500':
          description: Record with the same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/auctions/{a_id}/status':
    put:
      summary: Update the status of a Auction
      operationId: resources.listing_status.ListingStatus.update
      tags:
        - Auction records
      parameters:
        - name: a_id
          in: path
          description: Auction identifier
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: Auction status
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyMsg'
        '404':
          description: Place record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/bids/{b_id}':
    get:
      summary: Get a Bid Record
      operationId: resources.bid.Bid.get
      tags:
        - bid record
      parameters:
        - name: b_id
          in: path
          description: Bid identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bid Record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidOut'
        '404':
          description: Bid record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a Bid Record
      tags:
        - place records
      operationId: resources.bid.Bid.delete
      parameters:
        - name: b_id
          in: path
          description: Bid Record identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Record was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyMsg'
        '404':
          description: Bid record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bids/:
    post:
      summary: Create a Bid
      operationId: resources.bid.Bid.create
      tags:
        - Bid records
      requestBody:
        description: Bid Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidIn'
      responses:
        '200':
          description: Created Bid Record
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid_id:
                    type: string
                    description: The Bid ID
        '500':
          description: Record with the same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/bids/{b_id}/status':
    put:
      summary: Update the status of a Bid
      operationId: resources.bid_status.BidStatus.update
      tags:
        - Bid records
      parameters:
        - name: b_id
          in: path
          description: Bid identifier
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: Bid status
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyMsg'
        '404':
          description: Place record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    AuctionIn:
      required:
        - seller_id
        - category_id
        - starting_price
      properties:
        seller_id:
          format: string
        category_id:
          format: string
        starting_price:
          format: float
    AuctionOut:
      required:
        - id
      properties:
        id:
          type: number
        seller_id:
          format: string
        category_id:
          format: string
        starting_price:
          format: float
        status:
          $ref: '#/components/schemas/ListingStatus'
    ListingStatus:
      properties:
        status:
          type: string
        last_update:
          type: string
    BidIn:
      required:
        - buyer_id
        - bid_amount
        - auction
      properties:
        buyer_id:
          format: string
        bid_amount:
          format: float
        auction:
          format: string
      BidOut:
        required:
          - id
        properties:
          id:
            type: number
          buyer_id:
            format: string
          bid_amount:
            format: float
          auction:
            format: string
          status:
            $ref: '#/components/schemas/BidStatus'
      BidStatus:
        properties:
          status:
            type: string
          last_update:
            type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
    AnyMsg:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
