openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Account Service
  license:
    name: MIT
servers:
  - url: http://localhost:5001/v1.0
paths:
  /account/{a_id}:
    get:
      summary: Get Account Information
      operationId: resources.account.Account.get
      tags:
        - Account Information
      parameters:
        - name: a_id
          in: path
          description: identifier
          required: true
          schema:
            type: integer
        - name: email
          in: query
          description: Account email
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: Account password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account Information
          content:
            application/json:
              schema:
                $ref: '#components/schemas/AccountOut'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Error'

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete an Account
      tags:
        - Delete an Account
      operationId: resources.account.Account.delete
      parameters:
        - name: a_id
          in: path
          description: identifier
          required: true
          schema:
            type: integer
        - name: email
          in: query
          description: Account email
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: Account password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyMsg'
        '404':
          description: Account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /account/:
    post:
      summary: Create an Account
      operationId: resources.account.Account.create
      tags:
        - Account Information
      requestBody:
        description: Account Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountIn'
      responses:
        '200':
          description: Created an Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: string
                    description: The Account ID
        '500':
          description: An account with the same ID already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /account/{a_id}/settings:
    put:
      summary: Update the settings of an Account
      operationId: resources.settings.Settings.update
      tags:
        - Account Settings
      parameters:
        - name: a_id
          in: path
          description: identifier
          required: true
          schema:
            type: integer
        - name: email
          in: query
          description: Account email
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: Account password
          required: true
          schema:
            type: string
        - name: verification_code
          in: query
          description: Verification Code
          required: true
          schema:
            type: boolean
        - name: email_pref
          in: query
          description: Email Preferences
          required: true
          schema:
            type: boolean
        - name: promotion_pref
          in: query
          description: Promotion Preferences
          required: true
          schema:
            type: boolean
        - name: invoice_pref
          in: query
          description: Invoice Preferences
          required: true
          schema:
            type: boolean
        - name: browser_pref
          in: query
          description: Browser Notifications
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Settings were updated
          content:
            applications/json:
              schema:
                $ref: '#/components/schemas/AnyMsg'
        '404':
          description: Account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /account/{a_id}/login:
    put:
      summary: Update the password
      operationId: resources.login.Login.update
      tags:
        - Password Update
      parameters:
        - name: a_id
          in: path
          description: identifier
          required: true
          schema:
            type: integer
        - name: email
          in: query
          description: Account email
          required: true
          schema:
            type: string
        - name: old_password
          in: query
          description: Old password
          required: true
          schema:
            type: string
        - name: new_password
          in: query
          description: New password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Password was updated
          content:
            applications/json:
              schema:
                $ref: '#/components/schemas/AnyMsg'
        '404':
          description: Account was not found
          content:
            applications/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get Login Credentials
      operationId: resources.login.Login.get
      tags:
        - Login Credentials
      parameters:
        - name: a_id
          in: path
          description: identifier
          required: true
          schema:
            type: integer
        - name: email
          in: query
          description: Account email
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: Account password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Login Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginOut'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



components:
  schemas:
    AccountIn:
      required:
        - customer_email
        - customer_password
        - customer_name
        - customer_address
        - customer_birth
      properties:
        customer_email:
          format: string
        customer_password:
          format: string
        customer_name:
          format: string
        customer_address:
          format: string
        customer_birth:
          format: string
    AccountOut:
      required:
        - a_id
        - email
        - password
      properties:
        a_id:
          type: integer
        email:
          type: string
        password:
          type: string
        customer_email:
          format: string
        customer_password:
          format: string
        customer_name:
          format: string
        customer_address:
          format: string
        customer_birth:
          format: string
        settings:
          $ref: '#/components/schemas/Settings'
        login:
          $ref: '#/components/schemas/LoginOut'
    Settings:
      properties:
        verification_code:
          type: boolean
        email_pref:
          type: boolean
        promotion_pref:
          type: boolean
        invoice_pref:
          type: boolean
        browser_pref:
          type: boolean
    LoginOut:
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
    AnyMsg:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string




